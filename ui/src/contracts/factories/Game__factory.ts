/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../common";
import type { Game, GameInterface } from "../Game";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_boardEligibilityVerifier",
        type: "address",
      },
      {
        internalType: "address",
        name: "_revealAttackVerifier",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_gameId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "_by",
        type: "address",
      },
    ],
    name: "Joined",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_gameId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "_shotIndex",
        type: "uint8",
      },
    ],
    name: "ShotFired",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_gameId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "_shipId",
        type: "uint8",
      },
    ],
    name: "ShotLanded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_gameId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "_by",
        type: "address",
      },
    ],
    name: "Started",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_gameId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "_by",
        type: "address",
      },
    ],
    name: "Won",
    type: "event",
  },
  {
    inputs: [],
    name: "WIN_HIT_COUNT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "gameIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_gameId",
        type: "uint256",
      },
    ],
    name: "gameState",
    outputs: [
      {
        internalType: "address[2]",
        name: "_participants",
        type: "address[2]",
      },
      {
        internalType: "uint256[2]",
        name: "_boards",
        type: "uint256[2]",
      },
      {
        internalType: "uint256",
        name: "_turn",
        type: "uint256",
      },
      {
        internalType: "uint256[2]",
        name: "_hits",
        type: "uint256[2]",
      },
      {
        internalType: "address",
        name: "_winner",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "games",
    outputs: [
      {
        internalType: "uint256",
        name: "turn",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "winner",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_gameId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_boardHash",
        type: "uint256",
      },
      {
        internalType: "uint256[2]",
        name: "a",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[2][2]",
        name: "b",
        type: "uint256[2][2]",
      },
      {
        internalType: "uint256[2]",
        name: "c",
        type: "uint256[2]",
      },
    ],
    name: "joinGame",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_gameId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_turnShotIndex",
        type: "uint256",
      },
    ],
    name: "playFirstTurn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_gameId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_hitShipId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_prevTurnShotIndex",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_turnShotIndex",
        type: "uint256",
      },
      {
        internalType: "uint256[2]",
        name: "a",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[2][2]",
        name: "b",
        type: "uint256[2][2]",
      },
      {
        internalType: "uint256[2]",
        name: "c",
        type: "uint256[2]",
      },
    ],
    name: "playTurn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_gameId",
        type: "uint256",
      },
    ],
    name: "shots",
    outputs: [
      {
        internalType: "uint256[100]",
        name: "_p1s",
        type: "uint256[100]",
      },
      {
        internalType: "uint256[100]",
        name: "_p2s",
        type: "uint256[100]",
      },
      {
        internalType: "bool[100]",
        name: "_p1h",
        type: "bool[100]",
      },
      {
        internalType: "bool[100]",
        name: "_p2h",
        type: "bool[100]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_boardHash",
        type: "uint256",
      },
      {
        internalType: "uint256[2]",
        name: "a",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[2][2]",
        name: "b",
        type: "uint256[2][2]",
      },
      {
        internalType: "uint256[2]",
        name: "c",
        type: "uint256[2]",
      },
    ],
    name: "startGame",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516113ac3803806113ac83398101604081905261002f9161007c565b600280546001600160a01b039384166001600160a01b031991821617909155600380549290931691161790556100af565b80516001600160a01b038116811461007757600080fd5b919050565b6000806040838503121561008f57600080fd5b61009883610060565b91506100a660208401610060565b90509250929050565b6112ee806100be6000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c80635654a341116100665780635654a3411461013c578063584f1a8a14610145578063763cb3421461016857806380bdf5d41461017b578063b8ccd40f1461018e57600080fd5b8063117a5b9014610098578063498c1b90146100ed5780634a11e01f146101035780634e0e1a3e14610118575b600080fd5b6100cb6100a6366004610d8f565b600160205260009081526040902060048101546009909101546001600160a01b031682565b604080519283526001600160a01b039091166020830152015b60405180910390f35b6100f5601181565b6040519081526020016100e4565b610116610111366004610da8565b6101a1565b005b61012b610126366004610d8f565b61030f565b6040516100e4959493929190610df3565b6100f560005481565b610158610153366004610d8f565b6103f7565b6040516100e49493929190610eab565b610116610176366004610fc3565b610519565b61011661018936600461101f565b6106a7565b61011661019c36600461108e565b610bff565b60008281526001602052604090206004810154156101fc5760405162461bcd60e51b81526020600482015260136024820152724e6f7420746865206669727374207475726e2160681b60448201526064015b60405180910390fd5b80600001546001600160a01b031633146102445760405162461bcd60e51b81526020600482015260096024820152684e6f74207475726e2160b81b60448201526064016101f3565b606482106102945760405162461bcd60e51b815260206004820152601960248201527f53686f7420636f6f7264696e6174657320696e76616c6964210000000000000060448201526064016101f3565b600481015460008381526005830160205260409081902091909155517f856b88170e0caeb4b11ef613cb3df1eb1f59ef2c26d3fed6dbd995b325c5ae16906102eb908590859091825260ff16602082015260400190565b60405180910390a16004810180549060006103058361110b565b9190505550505050565b610317610d52565b61031f610d52565b6000610329610d52565b6000858152600160205260408082208151808301928390529091829060029082845b81546001600160a01b0316815260019091019060200180831161034b5750506040805180820191829052949a50600286810194509250905082845b81548152602001906001019080831161038657505050506004830154604080518082019182905293985090965060078401915060029082845b8154815260200190600101908083116103bf575050506009909301549799969850949690956001600160a01b03909116945092505050565b6103ff610d70565b610407610d70565b61040f610d70565b610417610d70565b6000858152600160205260408120905b6064811015610510576000818152600583016020526040902054868260648110610453576104536110df565b6020020152600582016000610469836064611124565b81526020019081526020016000205485826064811061048a5761048a6110df565b60209081029190910191909152600082815260068401909152604090205460ff168482606481106104bd576104bd6110df565b911515602090920201526006820160006104d8836064611124565b815260208101919091526040016000205460ff168382606481106104fe576104fe6110df565b91151560209092020152600101610427565b50509193509193565b6000858152600160208190526040822091908201546001600160a01b0316146105795760405162461bcd60e51b815260206004820152601260248201527147616d6520616c72656164792066756c6c2160701b60448201526064016101f3565b6002546040805160208101825287815290516343753b4d60e01b81526001600160a01b03909216916343753b4d916105ba9188918891889190600401611195565b602060405180830381865afa1580156105d7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105fb91906111f2565b6106475760405162461bcd60e51b815260206004820152601b60248201527f496e76616c6964207368697020636f6e66696775726174696f6e21000000000060448201526064016101f3565b6001810180546001600160a01b03191633908117909155600382018690556040805188815260208101929092527fc0081eeafa0d002abcd7d58d84b6e688d1526b9c3d915a282212ba08c49a17a7910160405180910390a1505050505050565b6000878152600160208190526040822060048101549092916002916106cc919061121b565b6106d6919061122e565b90506000600283600401546106eb919061122e565b905060008360040154116107335760405162461bcd60e51b815260206004820152600f60248201526e546865206669727374207475726e2160881b60448201526064016101f3565b828160028110610745576107456110df565b01546001600160a01b0316331461078a5760405162461bcd60e51b81526020600482015260096024820152684e6f74207475726e2160b81b60448201526064016101f3565b60098301546001600160a01b0316156107da5760405162461bcd60e51b815260206004820152601260248201527147616d6520616c7265616479206f7665722160701b60448201526064016101f3565b6064871061082a5760405162461bcd60e51b815260206004820152601e60248201527f4e6578742073686f7420636f6f7264696e6174657320696e76616c696421000060448201526064016101f3565b60058301600061083b846064611250565b610845908b611124565b81526020019081526020016000205460018460040154610865919061121b565b146108c55760405162461bcd60e51b815260206004820152602a60248201527f496e636f72726563742073686f7420666f722070726576696f7573207475726e6044820152692070726f76696465642160b01b60648201526084016101f3565b600360009054906101000a90046001600160a01b03166001600160a01b03166311479fea87878760405180606001604052808f8152602001896002018860028110610912576109126110df565b015481526020018e8152506040518563ffffffff1660e01b815260040161093c9493929190611267565b602060405180830381865afa158015610959573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061097d91906111f2565b6109ba5760405162461bcd60e51b815260206004820152600e60248201526d496e76616c69642070726f6f662160901b60448201526064016101f3565b8815610a27578260070182600281106109d5576109d56110df565b0180549060006109e48361110b565b90915550600190506006840160006109fd856064611250565b610a07908c611124565b81526020810191909152604001600020805460ff19169115159190911790555b604080518b815260ff8b1660208201527f8f78455e6cc82b42f8dc866bf3befc9b590f0ad419058f342ccab8f2cf4fcf19910160405180910390a16011836007018360028110610a7957610a796110df565b015410610af357828260028110610a9257610a926110df565b01546009840180546001600160a01b0319166001600160a01b039092169182179055604080518c815260208101929092527f34fee8cf8c6f9d389d6b16d4f6676f2d68632f123b5a7c3a4dd48b0ec7fac014910160405180910390a1610bf3565b600583016000610b04836064611250565b610b0e908a611124565b815260200190815260200160002054600014610b645760405162461bcd60e51b815260206004820152601560248201527453686f7473206d75737420626520756e697175652160581b60448201526064016101f3565b6004830154600584016000610b7a846064611250565b610b84908b611124565b8152602001908152602001600020819055507f856b88170e0caeb4b11ef613cb3df1eb1f59ef2c26d3fed6dbd995b325c5ae168a88604051610bd392919091825260ff16602082015260400190565b60405180910390a1600483018054906000610bed8361110b565b91905055505b50505050505050505050565b6002546040805160208101825286815290516343753b4d60e01b81526001600160a01b03909216916343753b4d91610c409187918791879190600401611195565b602060405180830381865afa158015610c5d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c8191906111f2565b610ccd5760405162461bcd60e51b815260206004820152601b60248201527f496e76616c6964207368697020636f6e66696775726174696f6e21000000000060448201526064016101f3565b60008054815260016020908152604080832080546001600160a01b031916339081179091558354845281842060020188905592548151908152918201929092527fcb88c87e28a0e0b68deef72d3d3536c607260b8c80944e6117a896f855eed81f910160405180910390a1600080549080610d478361110b565b919050555050505050565b60405180604001604052806002906020820280368337509192915050565b60405180610c8001604052806064906020820280368337509192915050565b600060208284031215610da157600080fd5b5035919050565b60008060408385031215610dbb57600080fd5b50508035926020909101359150565b8060005b6002811015610ded578151845260209384019390910190600101610dce565b50505050565b6101008101818760005b6002811015610e255781516001600160a01b0316835260209283019290910190600101610dfd565b505050610e356040830187610dca565b846080830152610e4860a0830185610dca565b6001600160a01b039290921660e09190910152949350505050565b8060005b6064811015610ded578151845260209384019390910190600101610e67565b8060005b6064811015610ded5781511515845260209384019390910190600101610e8a565b6132008101610eba8287610e63565b610ec8610c80830186610e63565b610ed6611900830185610e86565b610ee4612580830184610e86565b95945050505050565b6040805190810167ffffffffffffffff81118282101715610f1e57634e487b7160e01b600052604160045260246000fd5b60405290565b600082601f830112610f3557600080fd5b610f3d610eed565b806040840185811115610f4f57600080fd5b845b81811015610f69578035845260209384019301610f51565b509095945050505050565b600082601f830112610f8557600080fd5b610f8d610eed565b806080840185811115610f9f57600080fd5b845b81811015610f6957610fb38782610f24565b8452602090930192604001610fa1565b60008060008060006101408688031215610fdc57600080fd5b8535945060208601359350610ff48760408801610f24565b92506110038760808801610f74565b9150611013876101008801610f24565b90509295509295909350565b6000806000806000806000610180888a03121561103b57600080fd5b873596506020880135955060408801359450606088013593506110618960808a01610f24565b92506110708960c08a01610f74565b9150611080896101408a01610f24565b905092959891949750929550565b60008060008061012085870312156110a557600080fd5b843593506110b68660208701610f24565b92506110c58660608701610f74565b91506110d48660e08701610f24565b905092959194509250565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006001820161111d5761111d6110f5565b5060010190565b80820180821115611137576111376110f5565b92915050565b806000805b6002808210611151575061118e565b835186845b83811015611174578251825260209283019290910190600101611156565b505050604095909501945060209290920191600101611142565b5050505050565b61012081016111a48287610dca565b6111b1604083018661113d565b6111be60c0830185610dca565b61010082018360005b60018110156111e65781518352602092830192909101906001016111c7565b50505095945050505050565b60006020828403121561120457600080fd5b8151801515811461121457600080fd5b9392505050565b81810381811115611137576111376110f5565b60008261124b57634e487b7160e01b600052601260045260246000fd5b500690565b8082028115828204841417611137576111376110f5565b61016081016112768287610dca565b611283604083018661113d565b61129060c0830185610dca565b61010082018360005b60038110156111e657815183526020928301929091019060010161129956fea2646970667358221220e01aa99f83f012765a8866fe197ba637faa0f145af7f572c9bf52be0ba5eb85f64736f6c63430008140033";

type GameConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GameConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Game__factory extends ContractFactory {
  constructor(...args: GameConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _boardEligibilityVerifier: AddressLike,
    _revealAttackVerifier: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _boardEligibilityVerifier,
      _revealAttackVerifier,
      overrides || {}
    );
  }
  override deploy(
    _boardEligibilityVerifier: AddressLike,
    _revealAttackVerifier: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _boardEligibilityVerifier,
      _revealAttackVerifier,
      overrides || {}
    ) as Promise<
      Game & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Game__factory {
    return super.connect(runner) as Game__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GameInterface {
    return new Interface(_abi) as GameInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Game {
    return new Contract(address, _abi, runner) as unknown as Game;
  }
}
